#compdef gvt

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2017, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# github.com/FiloSottile/gvt
#
# -----------------------------------------------------------------------------

typeset -A opt_args

_gvt() {
  local -a commands __go_packages

  commands=(
  'fetch:fetch a remote dependency'
  'restore:restore dependencies from manifest'
  'update:update a local dependency'
  'list:list dependencies one per line'
  'delete:delete a local dependency'
  'help:more information about a command'
  )

  __go_packages() {
    local gopaths
    declare -a gopaths
    gopaths=("${(s/:/)$(go env GOPATH)}")
    for p in $gopaths; do
      _alternative ':go vendor packages:_path_files -W "$p/src" -/'
    done
  }

  _arguments \
    "1: :{_describe 'command' commands}" \
    '*:: :->args'

  case $state in
    args)
      case $words[1] in
        fetch)
          _arguments \
            '-t[fetch also _test.go files and testdata]' \
            '-a[fetch all files and subfolders, ignoring ONLY .git, .hg and .bzr]' \
            '-branch[fetch from the named branch. Will also be used by gvt update]:branch' \
            '-no-recurse[do not fetch recursively]' \
            '-tag[fetch the specified tag]:tag' \
            '-revision[fetch the specific revision from the branch or repository]:rev' \
            '-precaire[allow the use of insecure protocols]' \
            '*:go packages:__go_packages'
          ;;

        restore)
          _arguments \
            '-precaire[allow the use of insecure protocols]' \
            '-connections[count of parallel download connections]' \
          ;;

        update)
          _arguments \
            '-all[update all dependencies in the manifest]' \
            '-precaire[allow the use of insecure protocols]' \
            "*:gvt vendor packages:($(gvt list | awk '{print $1}'))"
          ;;

        list)
          _arguments \
            '-f[controls the template used for printing each manifest entry]:format (default value is "{{.Importpath}}\t{{.Repository}}{{.Path}}\t{{.Branch}}\t{{.Revision}}")' \
          ;;

        delete)
          _arguments \
            '-all[remove all dependencies]' \
            "*:gvt vendor packages:($(gvt list | awk '{print $1}'))"
          ;;

        help)
          _arguments "1: :{_describe 'command' commands}"
          ;;
      esac
      ;;
  esac
}

_gvt

# vim:ft=zsh:sts=2:sw=2:ts=2:et
