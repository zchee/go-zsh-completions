#compdef goyacc

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2016, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
# 
# golang.org/x/tools/cmd/goyacc
#
# Usage of goyacc:
#   -c report state closures
#   -cr
#      check all states are reducible
#   -dlval string
#      debug value (runtime yyDebug >= 3) (default "lval")
#   -dlvalf string
#      debug format of -dlval (runtime yyDebug >= 3) (default "%+v")
#   -ex
#      explain how were conflicts resolved
#   -fs
#      emit the follow set table
#   -l disable line directives (for compatibility ony - ignored)
#   -la
#      report all lookahead sets
#   -o string
#      parser output (default "y.go")
#   -p string
#      name prefix to use in generated code (default "yy")
#   -v string
#      create grammar report (default "y.output")
#   -xe string
#      generate eXtra errors from examples source file
#   -xegen string
#      generate error from examples source file automatically from the grammar
#
# -----------------------------------------------------------------------------

function _goyacc() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _arguments -C \
    '-l[disable line directives]' \
    '-o[string parser output (default "y.go")]' \
    '-p[string name prefix to use in generated code (default "yy")]' \
    '-v[string create parsing tables (default "y.output")]' \
    '*:yacc file:_path_files -g "**/*.y"' \
    && ret=0

  return ret
}

_goyacc "$*"

# vim:ft=zsh:et:sts=2:sw=2
