#compdef golint

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2017, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# github.com/golang/lint/golint
#
# Usage of golint:
#         golint [flags] # runs on package in current directory
#         golint [flags] [packages]
#         golint [flags] [directories] # where a '/...' suffix includes all sub-directories
#         golint [flags] [files] # all must belong to a single package
# Flags:
#   -min_confidence float
#         minimum confidence of a problem to print it (default 0.8)
#   -set_exit_status
#         set exit status to 1 if any issues are found
#
# -----------------------------------------------------------------------------

function _golint() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _go_packages() {
    local gopaths
    declare -a gopaths
    gopaths=("${(s/:/)$(go env GOPATH)}")
    for p in $gopaths; do
      _alternative ':packages:_path_files -W "$p/src" -/'
    done
  }

  _arguments -C \
    '-min_confidence=[minimum confidence of a problem to print it (default 0.8)]:minimum confidence (default 0.8)' \
    '-set_exit_status[set exit status to 1 if any issues are found]' \
    && ret=0

  _alternative '*:packages:_go_packages'
  _alternative "*:files or directories:_files -g \"*.go(-.)\""

  return ret
}

_golint "$*"

# vim:ft=zsh:et:sts=2:sw=2
