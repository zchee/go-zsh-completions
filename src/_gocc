#compdef gocc

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2016, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# github.com/goccmack/gocc
#
# usage: gocc flags bnf_file
#
#   bnf_file: contains the BNF grammar
#
# Flags:
#   -a    automatically resolve LR(1) conflicts
#   -debug_lexer
#         enable debug logging in lexer
#   -debug_parser
#         enable debug logging in parser
#   -h    help
#   -no_lexer
#         do not generate a lexer
#   -o string
#         output dir. (default "/Users/zchee/go/src/github.com/goccmack/gocc")
#   -p string
#         package (default "github.com/goccmack/gocc")
#   -u    allow unreachable productions
#   -v    verbose
#   -zip
#         zip the actiontable and gototable (experimental)
#
# -----------------------------------------------------------------------------

function _gocc() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _arguments -C \
    '-a[automatically resolve LR(1) conflicts]' \
    '-debug_lexer[enable debug logging in lexer]' \
    '-debug_parser[enable debug logging in parser]' \
    '-h[help]' \
    '-no_lexer[do not generate a lexer]' \
    '-o[output dir]:output directory:_path_files -W -\' \
    '-p[package]:package:_files' \
    '-u[allow unreachable productions]' \
    '-v[verbose]' \
    '-zip[zip the actiontable and gototable (experimental)]' \
    '*:BNF file:_files -g "*.bnf"' \
    && ret=0

  return ret
}

_gocc "$*"

# vim:ft=zsh:et:sts=2:sw=2
