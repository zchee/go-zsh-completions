#compdef gotags

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2018, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# github.com/jstemmer/gotags
#
# gotags version 1.4.1
#
# Usage: gotags [options] file(s)
#
#   -L string
#     	source file names are read from the specified file. If file is "-", input is read from standard in.
#   -R	recurse into directories in the file list.
#   -extra string
#     	include additional tags with package and receiver name prefixes (+q)
#   -f string
#     	write output to specified file. If file is "-", output is written to standard out.
#   -fields string
#     	include selected extension fields (only +l).
#   -list-languages
#     	list supported languages.
#   -silent
#     	do not produce any output on error.
#   -sort
#     	sort tags. (default true)
#   -tag-relative
#     	file paths should be relative to the directory containing the tag file.
#   -v	print version.
#
# -----------------------------------------------------------------------------

function _gotags() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _arguments -C \
    '-L[source file names are read from the specified file. If file is "-", input is read from standard in.]:filename:_files' \
    '-R[recurse into directories in the file list.]' \
    '-extra[include additional tags with package and receiver name prefixes]:prefix:(+q)' \
    '-f[write output to specified file. If file is "-", output is written to standard out.]:output file:_files' \
    '-fields[include selected extension fields]:field:(+l)' \
    '-list-languages[list supported languages.]' \
    '-silent[do not produce any output on error.]' \
    '-sort[sort tags. (default true)]' \
    '-tag-relative[file paths should be relative to the directory containing the tag file.]' \
    '-v[print version.]' \
    '*::path:_files' \
    && ret=0

  return ret
}

_gotags "$*"

# vim:ft=zsh:et:sts=2:sw=2
