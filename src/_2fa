#compdef 2fa

# -----------------------------------------------------------------------------
# The BSD-3-Clause License
#
# Copyright (c) 2016, Koichi Shiraishi
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# * Neither the name of que nor the names of its
#   contributors may be used to endorse or promote products derived from
#   this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
# -----------------------------------------------------------------------------
#
# rsc.io/2fa
#
# usage:
#         2fa -add [-7] [-8] [-hotp] keyname
#         2fa -list
#         2fa keyname
#
# -----------------------------------------------------------------------------

function _2fa() {
  local context curcontext=$curcontext state line ret=1
  declare -A opt_args

  _keynames() {
    local keys
    declare -a keys
    keys=("${(s/:/)$(2fa -list)}")
    _describe 'keynames' keys
  }

  _arguments -C \
    '-add[adds a new key to the 2fa keychain with the given name.]: :->addflags' \
    '-list[lists the names of all the keys in the keychain.]' \
    '1:keynames:_keynames' \
    '*:: :->args' \
    && ret=0

  case $state in
    addflags)
      local -a _add_flags
      _add_flags=(
      '-7[7-digit codes instead.]'
      '-8[8-digit codes instead.]'
      '-hotp[makes the new key generate counter-based (HOTP) codes instead.]'
      )
      _values \
        'addflags' \
        ${_add_flags[@]} \
        '*:name'  # TODO(zchee): show last argments that key name
      ;;
  esac

  return ret
}

_2fa "$*"

# vim:ft=zsh:et:sts=2:sw=2
